{"version":3,"sources":["Today/Today.css","App.css","Header/Header.css","FiveDays/FiveDaysCard.css","Menu/Menu.jsx","Header/Header.jsx","Chart/Chart.jsx","FiveDays/FiveDaysCard.jsx","Today/Today.jsx","FavoriteCities/FavotiteCities.jsx","App.jsx","serviceWorker.js","index.js","Menu/Menu.css","FavoriteCities/FavoriteCities.css","img/Harwen-Simple-Favorites.ico","Chart/Chart.css"],"names":["module","exports","input","pressure","condition","date","img_star","input_wrapper","oneDayWrapper","main_img","favorite__button","parameters_wrapper","card","card_column","icon_img","chart","Menu","react_default","a","createElement","className","styles","nav","NavLink","li","to","Header","_ref","fetchData","temp","favoriteCityListFunction","city","oneDay","action","onSubmit","type","placeholder","onChange","required","src","star","alt","onClick","Chart","allweatherArr","data","labels","datasets","label","borderColor","main","es","options","tooltips","mode","legend","position","display","fontColor","fontSize","title","text","scales","yAxes","scaleLabel","fontFamily","labelString","gridLines","color","ticks","xAxes","FiveDaysCard","state","fiveDaysData","isLoadingFivedays","modalStatus","toggleStatus","toggleChart","getWeatherFiveDays","q","_this","props","axios","get","concat","then","res","list","morningTemp","filter","el","dt_txt","includes","map","morningWeather","weather","morningHumidity","humidity","afterTemp","afterWeather","afterHumidity","eveningTemp","eveningWeather","eveningHumidity","moment","unix","dt","format","push","weatherArr","_loop","i","obj","idx","setState","catch","error","console","log","componentDidMount","toggleChartFunction","prev","prevProps","this","_this2","_this$state","cityName","icon","src_Chart_Chart","Component","Today","toFixed","FavotiteCities","favoritList","deleteFavoriteCityFromListFunction","getWeatherFromFavList","citylist","liStyle","key","id","data-id","favoriteCityName","delete","App","picturesCity","JSON","parse","localStorage","getItem","isLoaded","cityNameFromFavList","toggleStatusFunction","e","preventDefault","cityItem","uuidv4","Object","toConsumableArray","result","setItem","stringify","target","dataset","filterDeletItem","inputFunction","inputForm","value","timeFunction","setInterval","nameCity","name","hits","Math","floor","random","length","largeImageURL","getWeather","fetchDataFunction","getCity","nameCityState","wrapper","style","backgroundImage","FavoriteCities_FavotiteCities","react_loader_spinner_default","height","width","puff","card_wrapper","src_Header_Header","src_Menu_Menu","Switch","Route","exact","path","render","src_Today_Today","src_FiveDays_FiveDaysCard","Boolean","window","location","hostname","match","ReactDOM","HashRouter","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister","imgList","imgContainer","overlay","modal","__webpack_require__","p"],"mappings":"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","file":"static/js/main.bf9d0c58.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"input\":\"_2VdU9\",\"pressure\":\"_1Pu6H\",\"condition\":\"_2JsL5\",\"date\":\"_2BL8U\",\"img_star\":\"_3vEQ_\",\"input_wrapper\":\"-qZt8\",\"oneDayWrapper\":\"_3E_dl\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"main_img\":\"_2YD0X\",\"favorite__button\":\"zQAMn\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"input\":\"_20M3W\",\"pressure\":\"_7WN_X\",\"date\":\"_3e_F-\",\"img_star\":\"_3kOCM\",\"input_wrapper\":\"_1IPqT\",\"parameters_wrapper\":\"_36y8I\",\"condition\":\"_3UjK7\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"card\":\"_3wGdU\",\"card_column\":\"_1wa2g\",\"icon_img\":\"_2264w\",\"chart\":\"_1bkDO\"};","import React from 'react';\r\nimport styles from './Menu.css';\r\nimport { NavLink } from 'react-router-dom';\r\n\r\nconst Menu = () => {\r\n    return (\r\n        <div>\r\n            <ul className={styles.nav}>\r\n                <li>\r\n                    <NavLink className={styles.li} to='/'>Today</NavLink>\r\n                </li>\r\n                <li>\r\n                    <NavLink className={styles.li} to='/fivedays'>Five days</NavLink>\r\n                </li>\r\n            </ul>\r\n\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Menu;","import React from 'react';\r\nimport styles from './Header.css';\r\nimport star from '../img/Harwen-Simple-Favorites.ico';\r\n\r\nconst Header = ({ input, fetchData, pressure, temp, date, city, favoriteCityListFunction, condition }) => {\r\n    // console.log(data.main.temp);\r\n    return (\r\n        <div className={styles.oneDay}>\r\n            <form action=\"\" onSubmit={fetchData}>\r\n                <div className={styles.input_wrapper}>\r\n                    <input type=\"text\" placeholder=\" Enter name of city...\" className={styles.input} onChange={input} required />\r\n                    <img src={star} alt=\"Add to favorite\" className={styles.img_star} onClick={favoriteCityListFunction} />\r\n                </div>\r\n                <p className={styles.date}>{date}</p>\r\n            </form>\r\n\r\n        </div >\r\n    );\r\n};\r\n\r\nexport default Header; ","import React from 'react';\r\nimport { Line } from 'react-chartjs-2';\r\nimport styles from './Chart.css';\r\n\r\nconst Chart = ({ allweatherArr }) => {\r\n    // console.log(allweatherArr);\r\n    const data = {\r\n        // labels: ['Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday'],\r\n        labels: (allweatherArr[9]),\r\n        datasets: [\r\n            {\r\n                label: 'Morning',\r\n                // backgroundColor: `rgba(1, 126, 24, 0.53)`,\r\n                borderColor: `#0000ff`,\r\n                data: allweatherArr[0],\r\n\r\n            },\r\n            {\r\n                label: 'Afternoon',\r\n                // backgroundColor: `rgba(0, 255, 0 ,0.5)`,\r\n                // backgroundColor: `rgba(126, 1, 89, 0.55)`,\r\n                borderColor: `#00ff00`,\r\n                data: allweatherArr[3],\r\n            },\r\n            {\r\n                label: 'Evening',\r\n                // backgroundColor: `rgba(139, 69, 19,0.5)`,\r\n                // backgroundColor: `rgba(0,0,0,0.5)`,\r\n                borderColor: `#ff0000`,\r\n                data: allweatherArr[6],\r\n            },\r\n        ]\r\n    }\r\n    const options = {\r\n        tooltips: {\r\n            mode: 'index'\r\n        },\r\n        legend: {\r\n            position: 'top',\r\n            display: true,\r\n            labels: {\r\n                fontColor: 'white',\r\n                fontSize: 10,\r\n            }\r\n        },\r\n\r\n        title: {\r\n            display: true,\r\n            text: 'Temp Chart ',\r\n            position: 'top',\r\n            fontColor: 'white',\r\n            fontSize: 20,\r\n        },\r\n        scales: {\r\n            yAxes: [{\r\n                scaleLabel: {\r\n                    fontFamily: 'Yarta',\r\n                    display: true,\r\n                    labelString: 'Temp C',\r\n                    fontColor: 'white',\r\n                    fontSize: 15,\r\n                },\r\n                gridLines: {\r\n                    color: 'white'\r\n                },\r\n                ticks: {\r\n                    fontFamily: 'Yarta',\r\n                    fontSize: 12,\r\n                    fontColor: 'white',\r\n\r\n                }\r\n            }],\r\n            xAxes: [{\r\n                scaleLabel: {\r\n                    fontFamily: 'Yarta',\r\n                    display: true,\r\n                    fontColor: 'white',\r\n                    fontSize: 15,\r\n                },\r\n                gridLines: {\r\n                    color: 'white'\r\n                },\r\n                ticks: {\r\n                    fontFamily: 'Arial',\r\n                    fontSize: 12,\r\n                    fontColor: 'white',\r\n                }\r\n\r\n            }]\r\n        }\r\n\r\n    }\r\n    return (\r\n        <div className={styles.main}>\r\n            <div>\r\n                <Line data={data} options={options} />\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Chart;","import moment from 'moment';\r\nimport styles from './FiveDaysCard.css';\r\nimport axios from 'axios';\r\nimport React, { Component } from 'react';\r\nimport Chart from '../Chart/Chart';\r\n\r\nclass FiveDaysCard extends Component {\r\n    state = {\r\n        fiveDaysData: [],\r\n        // inputFromInput: this.props.inputMain,\r\n        data: {},\r\n        isLoadingFivedays: true,\r\n        modalStatus: false,\r\n        toggleStatus: false,\r\n        allweatherArr: [],\r\n        toggleChart: false,\r\n    }\r\n\r\n\r\n    getWeatherFiveDays = () => {\r\n        let q = this.props.input;\r\n        axios.get(`https://api.openweathermap.org/data/2.5/forecast?APPID=8defc985a5e2c764076c53bf90c6c44e&units=metric&lang=ru&q=${q || 'Kiev'}`)\r\n            .then(res => res.data.list)\r\n            .then(list => {\r\n                let morningTemp = list.filter(el => el.dt_txt.includes('06:00:00')).map(el => el.main.temp);\r\n                let morningWeather = list.filter(el => el.dt_txt.includes('06:00:00')).map(el => el.weather);\r\n                let morningHumidity = list.filter(el => el.dt_txt.includes('06:00:00')).map(el => el.main.humidity);\r\n\r\n                let afterTemp = list.filter(el => el.dt_txt.includes('15:00:00')).map(el => el.main.temp);\r\n                let afterWeather = list.filter(el => el.dt_txt.includes('15:00:00')).map(el => el.weather);\r\n                let afterHumidity = list.filter(el => el.dt_txt.includes('15:00:00')).map(el => el.main.humidity);\r\n\r\n                let eveningTemp = list.filter(el => el.dt_txt.includes('21:00:00')).map(el => el.main.temp);\r\n                let eveningWeather = list.filter(el => el.dt_txt.includes('21:00:00')).map(el => el.weather);\r\n                let eveningHumidity = list.filter(el => el.dt_txt.includes('21:00:00')).map(el => el.main.humidity);\r\n                let date = list.filter(el => el.dt_txt.includes('21:00:00')).map(el => moment.unix(el.dt).format('MMM Do YY'));\r\n\r\n                let allweatherArr = [];\r\n                allweatherArr.push(morningTemp, morningWeather, morningHumidity, afterTemp, afterWeather,\r\n                    afterHumidity, eveningTemp, eveningWeather, eveningHumidity, date);\r\n                // console.log(allweatherArr);\r\n\r\n                let weatherArr = [];\r\n                for (let i = 0; i < 5; i++) {\r\n                    let obj = {};\r\n                    allweatherArr.map((el, idx) => {\r\n                        switch (idx) {\r\n                            case 0: obj.morningTemp = el[i];\r\n                                break;\r\n                            case 1: obj.morningWeather = el[i];\r\n                                break;\r\n                            case 2: obj.morningHumidity = el[i];\r\n                                break;\r\n                            case 3: obj.afterTemp = el[i];\r\n                                break;\r\n                            case 4: obj.afterWeather = el[i];\r\n                                break;\r\n                            case 5: obj.afterHumidity = el[i];\r\n                                break;\r\n                            case 6: obj.eveningTemp = el[i];\r\n                                break;\r\n                            case 7: obj.eveningWeather = el[i];\r\n                                break;\r\n                            case 8: obj.eveningHumidity = el[i];\r\n                                break;\r\n                            case 9: obj.date = el[i];\r\n                                weatherArr.push(obj);\r\n                                break;\r\n                            default: break;\r\n                        }\r\n                    })\r\n                }\r\n                this.setState({\r\n                    fiveDaysData: weatherArr,\r\n                    isLoadingFivedays: false,\r\n                    allweatherArr: allweatherArr,\r\n\r\n\r\n                })\r\n            })\r\n            .catch(error => {\r\n                console.log(error);\r\n            })\r\n    }\r\n\r\n\r\n    componentDidMount = () => {\r\n        this.getWeatherFiveDays();\r\n        // this.getCity();\r\n    }\r\n\r\n    componentDidUpdate(prevProps) {\r\n        // console.log(prevProps);\r\n        if (prevProps.input !== this.props.input) {\r\n            this.getWeatherFiveDays()\r\n        }\r\n    }\r\n\r\n    toggleChartFunction = () => {\r\n        this.setState(prev => ({\r\n            toggleChart: !prev.toggleChart\r\n        }))\r\n    }\r\n\r\n    render() {\r\n        const { fiveDaysData, allweatherArr, toggleChart } = this.state;\r\n        // console.log(fiveDaysData)\r\n        console.log(allweatherArr);\r\n        return (\r\n            <div>\r\n\r\n                {\r\n                    this.state.isLoadingFivedays ?\r\n                        <p>Loading</p> :\r\n                        <div className={styles.card}>\r\n\r\n                            {fiveDaysData.map(el => <div className={styles.card_column}>\r\n                                <p>City : {this.props.cityName} </p>\r\n                                <p>{el.date}</p>\r\n                                {/* <p>{moment.unix(el.date).format(\"MM Do YY\")}</p> */}\r\n                                <p>Morning t : {el.morningTemp} &deg; C</p>\r\n                                {/* <p>Afternoon temp: {el.afterTemp} &deg; C</p> */}\r\n                                <p>Evening t : {el.eveningTemp} &deg; C</p>\r\n                                <p>{el.morningWeather[0].main}</p>\r\n                                {/* <p>{el.morningWeather[0].icon}</p> */}\r\n                                <p className={styles.condition}><img className={styles.icon_img}\r\n                                    src={`http://openweathermap.org/img/w/${el.morningWeather[0].icon}.png`} alt=\"\" /></p>\r\n                            </div>\r\n                            )}\r\n                        </div >\r\n                }\r\n                <p className={styles.chart} onClick={this.toggleChartFunction}>Temperature Chart</p>\r\n                {toggleChart ? <Chart allweatherArr={allweatherArr} /> : null}\r\n            </div>\r\n        );\r\n\r\n    }\r\n}\r\n\r\nexport default FiveDaysCard;\r\n\r\n","import React from 'react';\r\nimport styles from './Today.css';\r\n// import star from '../img/Harwen-Simple-Favorites.ico';\r\n\r\nconst Today = ({ pressure, temp, cityName, condition, data }) => {\r\n    // console.log(data);\r\n    return (\r\n        <div className={styles.oneDay}>\r\n            <div className={styles.oneDayWrapper}>\r\n                <p className={styles.pressure}> City : {cityName}</p>\r\n                <p className={styles.pressure}>Temperature : {temp} &deg; C</p>\r\n                {/* <p className={styles.pressure}>Wind:{data.wind.speed} m/s</p> */}\r\n                <p className={styles.pressure}>Pressure : {(pressure / 1.33).toFixed(2)} mm Hg</p>\r\n                <p className={styles.condition}>Condition : {condition} <img src={`https://openweathermap.org/img/w/${data.weather[0].icon}.png`} alt=\"\" /></p>\r\n            </div>\r\n        </div >\r\n    );\r\n};\r\n\r\nexport default Today; ","import React from 'react';\r\nimport styles from './FavoriteCities.css';\r\n// import { format } from 'path';\r\n\r\nconst FavotiteCities = ({ favoritList, deleteFavoriteCityFromListFunction, getWeatherFromFavList, getWeatherFiveDays }) => {\r\n    return (\r\n        <div>\r\n            <ul className={styles.citylist}>\r\n                {favoritList.map(el => <li className={styles.liStyle} key={el.id} onClick={getWeatherFromFavList}\r\n                    data-id={el.id}>{el.favoriteCityName} < span data-id={el.id} onClick={deleteFavoriteCityFromListFunction}\r\n                        className={styles.delete} >X</span> </li>)}\r\n            </ul>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default FavotiteCities;","// import PropTypes from 'prop-types';\nimport Loader from 'react-loader-spinner';\nimport styles from './App.css';\nimport { Switch, Route, NavLink } from 'react-router-dom';\nimport Menu from './Menu/Menu.jsx';\nimport React, { Component } from 'react';\nimport axios from 'axios';\nimport Header from './Header/Header';\nimport moment from 'moment';\nimport uuidv4 from 'uuid/v4';\nimport FiveDaysCard from './FiveDays/FiveDaysCard';\nimport Today from './Today/Today';\nimport FavotiteCities from './FavoriteCities/FavotiteCities';\n\nclass App extends Component {\n  state = {\n    input: '',\n    data: {},\n    picturesCity: {},\n    cityName: '',\n    condition: '',\n    pressure: '',\n    temp: '',\n    favoritList: JSON.parse(localStorage.getItem('favoritList')) || [],// Array of objects \n    isLoaded: true,\n    modalStatus: false,\n    toggleStatus: false,\n    cityNameFromFavList: '',\n  }\n\n  toggleStatusFunction = () => {\n    this.setState(prev => ({\n      toggleStatus: !prev.toggleStatus\n    }))\n  }\n\n  favoriteCityListFunction = (e) => {\n    e.preventDefault();\n\n    let cityItem = {\n      id: uuidv4(),\n      favoriteCityName: this.state.input,\n    }\n    this.setState(prev => ({\n      favoritList: [...prev.favoritList, cityItem]\n    }))\n\n    let result = JSON.parse(localStorage.getItem('favoritList')) || [];\n    result.push(cityItem);\n    localStorage.setItem('favoritList', JSON.stringify(result));\n  }\n\n  deleteFavoriteCityFromListFunction = (e) => {\n    let id = e.target.dataset.id;\n    // console.log('lkigi');\n    this.setState({\n      favoritList: this.state.favoritList.filter(el => el.id !== id)\n    })\n    let deletItem = JSON.parse(localStorage.getItem('favoritList'));\n    let filterDeletItem = deletItem.filter(el => el.id !== id);\n    localStorage.setItem('favoritList', JSON.stringify(filterDeletItem));\n  }\n\n  inputFunction = (e) => {\n    let inputForm = e.target.value;\n    this.setState({\n      input: inputForm,\n    })\n  }\n\n  timeFunction = () => {\n    setInterval(() => {\n      let date = moment().format('LLLL');\n      this.setState({\n        date: date,\n      })\n    }, 1000)\n  }\n\n  getWeatherFromFavList = (e) => {\n    let id = e.target.dataset.id;\n    let nameCity = this.state.favoritList.filter(el => el.id === id)[0].favoriteCityName;\n    let q = nameCity;\n    axios.get(`https://api.openweathermap.org/data/2.5/weather?APPID=8defc985a5e2c764076c53bf90c6c44e&units=metric&lang=ru&q=${q || 'Kiev'}`)\n      .then(res => {\n        this.setState(prev => ({\n          data: res.data,\n          pressure: res.data.main.pressure,\n          temp: res.data.main.temp,\n          cityName: res.data.name,\n          condition: res.data.weather[0].main,\n          isLoaded: false,\n          cityNameFromFavList: nameCity\n        }))\n      })\n      .catch(error => {\n        console.log(error);\n      })\n    axios.get(`https://pixabay.com/api/?key=5018958-ed49ccd90878e6614abdf24a6&q=${q || 'Kiev'}`)\n      .then(res => {\n        this.setState({\n          picturesCity: res.data.hits[Math.floor(Math.random() * res.data.hits.length)].largeImageURL,\n        })\n      })\n      .catch(error => {\n        console.log(error);\n      })\n\n  }\n\n  getWeather = () => {\n    let q = this.state.input;\n    axios.get(`https://api.openweathermap.org/data/2.5/weather?APPID=8defc985a5e2c764076c53bf90c6c44e&units=metric&lang=ru&q=${q || 'Kiev'}`)\n      .then(res => {\n        this.setState(prev => ({\n          data: res.data,\n          pressure: res.data.main.pressure,\n          temp: res.data.main.temp,\n          cityName: res.data.name,\n          condition: res.data.weather[0].main,\n          isLoaded: false,\n        }))\n\n      })\n      .catch(error => {\n        console.log(error);\n      })\n  }\n\n  fetchDataFunction = (e) => {\n    e.preventDefault();\n    this.getWeather();\n    this.getCity();\n  }\n\n  componentDidMount = () => {\n    this.getWeather();\n    this.getCity();\n    this.timeFunction();\n  }\n\n  getCity = () => {\n    let q = this.state.input;\n    axios.get(`https://pixabay.com/api/?key=5018958-ed49ccd90878e6614abdf24a6&q=${q || 'Kiev'}`)\n      .then(res => {\n        this.setState({\n          picturesCity: res.data.hits[Math.floor(Math.random() * res.data.hits.length)].largeImageURL,\n          // picturesCity: res.data.photos.photo[(Math.floor(Math.random() * 99))]\n        })\n      })\n      .catch(error => {\n        console.log(error);\n      })\n  }\n\n\n  render() {\n    const { picturesCity, data, pressure, temp, isLoaded,\n      date, cityName, favoritList, toggleStatus, condition, nameCityState, cityNameFromFavList, input } = this.state;\n    // let s = isLoaded ? null : data.main;\n    // console.log(favoritList);\n    // console.log(data.weather[0].main);\n    // console.log(input);\n\n    return (\n      <div className={styles.wrapper}>\n        <div className={styles.main_img} style={{ backgroundImage: `linear-gradient(rgba(0,0,0,0.5),rgba(0,0,0,0.5)),url(${picturesCity})` }} >\n          <button className={styles.favorite__button} onClick={this.toggleStatusFunction}>Favorite list</button>\n\n\n\n          {toggleStatus ?\n            <FavotiteCities favoritList={favoritList} getWeatherFromFavList={this.getWeatherFromFavList}\n              deleteFavoriteCityFromListFunction={this.deleteFavoriteCityFromListFunction} /> : null\n          }\n\n          {isLoaded ? <Loader type=\"Puff\" color=\"#00BFFF\" height=\"100\" width=\"100\" className={styles.puff} />\n            : <div className={styles.card_wrapper}><Header input={this.inputFunction} fetchData={this.fetchDataFunction} data={data}\n              pressure={pressure} temp={temp} date={date} city={cityName} condition={condition} favoriteCityListFunction={this.favoriteCityListFunction} />\n\n              <Menu />\n              <Switch>\n                <Route exact path='/' render={() => <Today temp={temp}\n                  pressure={pressure} cityName={cityName} condition={condition} data={data} />} />\n                <Route path='/fivedays' render={() => <FiveDaysCard input={cityNameFromFavList} cityName={cityName} favoritList={favoritList} nameCityState={nameCityState} />} />\n              </Switch>\n            </div>\n          }\n        </div>\n      </div >\n    );\n\n  }\n\n}\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { HashRouter } from 'react-router-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n    <HashRouter>\n        <App />\n    </HashRouter>, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"nav\":\"_1Pudy\",\"li\":\"_1q1xK\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"citylist\":\"_10CZY\",\"liStyle\":\"_3l0dX\",\"imgList\":\"_2rHmO\",\"imgContainer\":\"_18sbF\",\"overlay\":\"_3m2JR\",\"modal\":\"_1_Soe\",\"delete\":\"_2RKC7\"};","module.exports = __webpack_public_path__ + \"static/media/Harwen-Simple-Favorites.d3196385.ico\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"main\":\"_288j2\"};"],"sourceRoot":""}